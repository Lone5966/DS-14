#include <GL/glut.h>
#include <iostream>
using namespace std;

void plot_point(int x_centre, int y_centre, int x, int y) {
    glBegin(GL_POINTS);
    glVertex2i(x + x_centre, y + y_centre);
    glVertex2i(-x + x_centre, y + y_centre);
    glVertex2i(x + x_centre, -y + y_centre);
    glVertex2i(-x + x_centre, -y + y_centre);
    glVertex2i(y + x_centre, x + y_centre);
    glVertex2i(-y + x_centre, x + y_centre);
    glVertex2i(y + x_centre, -x + y_centre);
    glVertex2i(-y + x_centre, -x + y_centre);
    glEnd();
}

void midPointCircleDraw(int x_centre, int y_centre, int r) {
    int x = r, y = 0;
    int P = 1 - r;

    plot_point(x_centre, y_centre, x, y);

    while (x > y) {
        y++;

        if (P <= 0) {
            P = P + 2*y + 1;
        }
        else {
            x--;
            P = P + 2*y - 2*x + 1;
        }

        if (x < y) break;

        plot_point(x_centre, y_centre, x, y);

        if (x != y) {
            plot_point(x_centre, y_centre, y, x);
        }
    }

    glFlush();
}

void draw() {
    glClear(GL_COLOR_BUFFER_BIT);
    int x_centre = 0, y_centre = 0, r = 50;
    midPointCircleDraw(x_centre, y_centre, r);
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowPosition(100, 100);
    glutInitWindowSize(500, 500);
    glutCreateWindow("Mid-Point Circle Drawing Algorithm");

    glClearColor(1.0, 1.0, 1.0, 0.0);
    glColor3f(0.0, 0.0, 0.0);
    gluOrtho2D(-250, 250, -250, 250);

    glutDisplayFunc(draw);
    glutMainLoop();

    return 0;
}